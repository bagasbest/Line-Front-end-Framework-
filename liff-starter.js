
window.onload = function () {
    const useNodeJS = false;
    const defaultLiffId = "1655339127-8mGjgnR7";

    let myLiffId = "";

     // if node is used, fetch the environment variable and pass it to the LIFF method
    // otherwise, pass defaultLiffId
    if(useNodeJS) {
        fetch('/send-id')
        .then(function(reqRespose){
            return reqRespose.json();
        }) 
        .then(function(jsonRespose){
            myLiffId = jsonRespose.id;
            initializeLiffOrDie(myLiffId);
        })
        .catch(function(error){
            document.getElementById("liffAppContent").classList.add('hidden');
            document.getElementById("noddeLiffIdErrorMessage").classList.remove('hidden');
        })
    } else {
        myLiffId = defaultLiffId;
        initializeLiffOrDie(myLiffId);
    }
};

/**
* Check if myLiffId is null. If null do not initiate liff.
* @param {string} myLiffId The LIFF ID of the selected element
*/
function initializeLiffOrDie (myLiffId) {
    if(!myLiffId) {
        document.getElementById("liffAppContent").classList.add('hidden');
        document.getElementById("liffIdErrorMessage").classList.remove('hidden');

    }else {
        initializeLiff(myLiffId);
    }
}

/**
* Initialize LIFF
* @param {string} myLiffId The LIFF ID of the selected element
*/
function initializeLiff (myLiffId) {
    liff.init({
            liffId: myLiffId
        })
        .then(() => {
            // start to use LIFF's api
            initializeApp();
        })
        .catch((err) => {
            document.getElementById("liffAppContent").classList.add('hidden');
            document.getElementById("liffInitErrorMessage").classList.remove('hidden');
        });
}

/**
 * Initialize the app by calling functions handling individual app components
 */
function initializeApp() {
    displayLiffData();
    displayIsInClientInfo();
    registerButtonHandlers();

    //check if the user is logged in/out, and disable inapropriate button
    if(liff.isLoggedIn()){
        document.getElementById('liffLoginButton').disabled = true;
    }else{
        document.getElementById('liffLogoutButton').disabled = true;
    }
}


/**
* Display data generated by invoking LIFF methods
*/
function displayLiffData() {
    document.getElementById('isInClient').textContent = liff.isInClient();
    document.getElementById('isLoggedIn').textContent = liff.isLoggedIn();
}

/**
* Toggle the login/logout buttons based on the isInClient status, and display a message accordingly
*/
function displayIsInClientInfo() {
    if(liff.isInClient()) {
        document.getElementById('liffLoginButton').classList.toggle('hidden');
        document.getElementById('liffLogoutButton').classList.toggle('hidden');
        document.getElementById('isInClientMessage').textContent = "You are opening the app browser of LINE.";
    }else {
        document.getElementById('isInClientMessage').textContent = "You are opening app in external browser";
    }
}

function registerButtonHandlers () {
    // openWindow call
    document.getElementById('openWindowButton').addEventListener('click', function(){
        liff.openWindow({
            url: 'https://catatansederhana80.herokuapp.com/',
            external: true
        });
    });

    // closeWindow call
    document.getElementById('closeWindowButton').addEventListener('click', function(){
        if(!liff.isInClient()) {
            sendAlertIfNotInClient();
        }else {
            liff.closeWindow();
        }
    });

    // login call, only when external browser is used
    document.getElementById('liffLoginButton').addEventListener('click', function() {
        if(!liff.isLoggedIn()) {
            liff.login();
        }
    });

    // logout call only when external browse
    document.getElementById('liffLogoutButton').addEventListener('click', function() {
        if(liff.isLoggedIn()) {
            liff.logout();
            window.location.reload();
        }
    });

    // sendMessages call
    document.getElementById('sendMessageButton').addEventListener('click', function(){
        if(!liff.isInClient()) {
            sendAlertIfNotInClient();
        }else {
            liff.sendMessages([{
                'type' : 'text',
                'text' : "Anda telah menggunakan fitur send message!"
            }]).then(function() {
                window.alert('Ini adalah pesan dari fitur send message');
            }).catch(function(error){
                window.alert('Error sending message: ' +error);
            });
        }
    });
}

function sendAlertIfNotInClient() {
    alert('This button is unavailable as LIFF is currently being opened in an external browser');
}

/**
* Toggle specified element
* @param {string} elementId The ID of the selected element
*/

function toggleElement(elementId) {
    const elem = document.getElementById(elementId);
    if(elem.offsetWidth > 0 && elem.offsetHeight > 0) {
        elem.style.display = 'none';
    }else {
        elem.style.display = 'block';
    }
}




